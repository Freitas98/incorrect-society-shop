{% layout none %}

<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    {% render 'css-variables' %}
    {{ 'critical.css' | asset_url | stylesheet_tag: preload: true }}
    {% render 'meta-tags' %}

    {% style %}
      .gc-page {
        background: var(--color-background);
        color: var(--color-foreground);
        min-height: 100vh;
        display: grid;
        place-items: center;
        padding: 40px 16px;
      }
      .gc-card {
        width: 100%;
        max-width: 1100px;
      }
      .gc-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 36px;
        align-items: center;
      }
      .gc-image {
        position: relative;
      }
      .gc-image img {
        width: 100%;
        height: auto;
        display: block;
      }
      .gc-amount {
        font-size: clamp(28px, 6vw, 72px);
        line-height: 1.1;
        margin: 0;
      }
      .gc-right {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 20px;
      }
      .gc-actions {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 12px;
        margin: 0;
      }
      .gc-actions.gc-actions--secondary {
        margin-top: 4px;
      }
      .gc-code {
        display: inline-block;
        font-family: ui-monospace, monospace;
        letter-spacing: 3px;
        background: rgba(255, 255, 255, 0.06);
        border: 1px dashed var(--color-border);
        padding: 12px 16px;
      }
      .gc-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 10px 16px;
        border: 1px solid currentColor;
        background: transparent;
        color: inherit;
        text-decoration: none;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: 700;
        cursor: pointer;
      }
      .gc-note {
        opacity: 0.8;
        margin: 8px 0 0;
      }
      /* Code overlay on the card image */
      .gc-code-on-card {
        position: absolute;
        top: 74%;
        left: 21%;
        rotate: -32deg;
        background: transparent;
        padding: 0.5em 0.8em;
        font-family: ui-monospace, monospace;
        font-size: clamp(9px, 2.3vw, 19px);
        letter-spacing: 0.25em;
        line-height: 1;
        white-space: nowrap;
        color: rgba(255, 255, 255, 0.9);
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.65), -1px -1px 0 rgba(255, 255, 255, 0.15);
        mix-blend-mode: overlay;
        pointer-events: none;
      }
      @media (max-width: 1200px) {
        .gc-code-on-card {
          font-size: clamp(10px, 1.9vw, 19px);
          letter-spacing: 0.25em;
          top: 74%;
          left: 21%;
        }
      }
      @media (max-width: 1100px) {
        .gc-code-on-card {
          top: 72%;
          left: 19.5%;
        }
      }
      @media (max-width: 1000px) {
        .gc-code-on-card {
          top: 71%;
          left: 19.5%;
        }
      }
      @media (max-width: 900px) {
        .gc-code-on-card {
          font-size: clamp(10px, 3vw, 25px);
          top: 76%;
          left: 22%;
        }
      }
      @media (max-width: 800px) {
        .gc-code-on-card {
          top: 75%;
          left: 23.8%;
        }
      }
      @media (max-width: 700px) {
        .gc-code-on-card {
          font-size: clamp(10px, 4.6vw, 20px);
          letter-spacing: 0.24em;
          top: 75%;
          left: 23%;
        }
      }
      @media (max-width: 600px) {
        .gc-code-on-card {
          font-size: clamp(10px, 4.6vw, 17px);
          top: 73%;
          left: 24.5%;
        }
      }
      @media (max-width: 500px) {
        .gc-code-on-card {
          top: 71%;
          left: 21.5%;
        }
      }

      @media (max-width: 450px) {
        .gc-code-on-card {
          font-size: clamp(10px, 4.6vw, 14px);
          top: 71%;
          left: 21.5%;
        }
      }

      @media (max-width: 385px) {
        .gc-code-on-card {
          display: none;
        }
      }
      @media (max-width: 900px) {
        .gc-grid {
          grid-template-columns: 1fr;
        }
      }
    {% endstyle %}

    {{ content_for_header }}
  </head>

  <body>
    {% liquid
      assign gc_handle = settings.gift_card_product_handle
      assign gc_product = null
      if gc_handle and gc_handle != ''
        assign gc_product = all_products[gc_handle]
      endif
    %}

    <main class="gc-page">
      <section class="gc-card" role="region" aria-label="{{ 'gift_card.card' | t }}">
        <div class="gc-grid">
          <div class="gc-image">
            {% liquid
              assign selected_image = null
              assign denomination_cents = gift_card.initial_value | default: gift_card.balance
              if gc_product
                for v in gc_product.variants
                  if v.price == denomination_cents
                    if v.image
                      assign selected_image = v.image
                    endif
                    break
                  endif
                endfor
                if selected_image == null and gc_product.featured_image
                  assign selected_image = gc_product.featured_image
                endif
              endif
            %}

            {% if selected_image %}
              {{
                selected_image
                | image_url: width: 1200
                | image_tag: width: 1200, alt: gc_product.title, loading: 'lazy'
              }}
            {% elsif gc_product and gc_product.images and gc_product.images.size > 0 %}
              {{
                gc_product.images.first
                | image_url: width: 1200
                | image_tag: width: 1200, alt: gc_product.title, loading: 'lazy'
              }}
            {% else %}
              <img
                src="{{ 'gift-card/card.svg' | shopify_asset_url }}"
                alt="{{ 'gift_card.card' | t }}"
                width="1200"
                height="800"
              >
            {% endif %}
            <div class="gc-code-on-card" aria-hidden="true">{{ gift_card.code | format_code }}</div>
          </div>

          <div class="gc-right">
            <div class="gc-amount">{% render 'price', amount: gift_card.balance %}</div>
            <div class="gc-code" id="gc-code">{{ gift_card.code | format_code }}</div>
            <div class="gc-actions">
              <button
                class="gc-btn"
                type="button"
                id="gc-copy"
                data-copy="{{ 'gift_card.copy' | t | escape }}"
                data-copied="{{ 'gift_card.copied' | t | escape }}"
              >
                {{ 'gift_card.copy' | t | default: 'Copy code' }}
              </button>
              <button class="gc-btn" type="button" id="gc-print">{{ 'gift_card.print' | t | default: 'Print' }}</button>
            </div>
            {% if gc_product %}
              <div class="gc-actions gc-actions--secondary">
                <a class="gc-btn" href="{{ gc_product.url }}">
                  {{- 'gift_card.buy_more' | t | default: 'Buy more gift cards' -}}
                </a>
              </div>
            {% endif %}
            <p class="gc-note">{{ 'gift_card.use_at_checkout' | t }}</p>
          </div>
        </div>
      </section>
    </main>

    <script>
      const copyBtn = document.getElementById('gc-copy');
      const codeEl = document.getElementById('gc-code');
      const printBtn = document.getElementById('gc-print');
      const msgCopy = copyBtn?.dataset.copy || 'Copy code';
      const msgCopied = copyBtn?.dataset.copied || 'Copied!';
      copyBtn?.addEventListener('click', async () => {
        try {
          await navigator.clipboard.writeText(codeEl?.textContent?.trim() || '');
          copyBtn.textContent = msgCopied;
          setTimeout(() => (copyBtn.textContent = msgCopy), 1500);
        } catch {
          copyBtn.textContent = msgCopy;
        }
      });
      printBtn?.addEventListener('click', () => window.print());
    </script>
  </body>
</html>
