<div class="sidebar-overlay" id="sidebar-overlay"></div>
<nav class="sidebar" id="sidebar">
  <div class="sidebar-header">
    <button class="sidebar-close" id="sidebar-close" aria-label="Close menu">
      <span>&times;</span>
    </button>
  </div>
  
  <div class="sidebar-content">
    <div class="sidebar-menu-section">
      <ul class="sidebar-menu">
        <li class="sidebar-menu-item">
          <a href="{{ collections.new.url | default: '/collections/outsider' }}" class="sidebar-menu-link">OUTSIDER</a>
        </li>
        <li class="sidebar-menu-item">
          <a href="{{ collections.t-shirts.url | default: '/collections/gift-cards' }}" class="sidebar-menu-link">GIFT CARDS</a>
        </li>
      </ul>
    </div>
    
    <div class="sidebar-footer">
      {% if shop.customer_accounts_enabled %}
        <a href="{{ routes.account_url }}" class="sidebar-account">
          MY ACCOUNT
        </a>
      {% endif %}
      
      {% render 'social-icons', size: 24 %}

      <div class="sidebar-links">
  <a href="{{ pages['newsletter'].url }}" class="sidebar-footer-link">{{ 'policies.newsletter' | t | default: 'Newsletter' }}</a>
  <a href="{{ pages['contact-us'].url }}" class="sidebar-footer-link">{{ 'policies.contact_us' | t | default: 'Contact Us' }}</a>
  <a href="{{ pages['shipping-policy'].url }}" class="sidebar-footer-link">{{ 'policies.shipping_policy' | t | default: 'Shipping policy' }}</a>
  <a href="{{ pages['return-policy'].url }}" class="sidebar-footer-link">{{ 'policies.return_policy' | t | default: 'Return policy' }}</a>
  <a href="{{ pages['terms-of-service'].url }}" class="sidebar-footer-link">{{ 'policies.terms_of_service' | t | default: 'Terms of Service' }}</a>
      </div>
        {% render 'music-player' %}
    </div>
  </div>
</nav>

<!-- Burger lives inside header for alignment -->

{% stylesheet %}
  /* Left-side mobile burger */
  /* Header now renders the burger; no fixed button here */

  .sidebar {
    position: fixed;
    top: calc(var(--announcement-height, 40px) + var(--site-header-height, 0px)); /* Below announcement + header */
    left: 0; /* Always visible on desktop */
    width: 300px;
    height: calc(100vh - (var(--announcement-height, 40px) + var(--site-header-height, 0px)));
    background-color: var(--color-background);
    border-right: none;
    transition: left 0.3s ease;
    z-index: 1002;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
  }

  .sidebar.open {
    left: 0;
  }

  .sidebar-overlay {
    position: fixed;
  top: calc(var(--announcement-height, 40px) + var(--site-header-height, 0px)); /* Start below announcement + header */
    left: 0;
  width: 100%;
  height: calc(100vh - (var(--announcement-height, 40px) + var(--site-header-height, 0px))); /* Respect announcement + header height */
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1001;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .sidebar-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .sidebar-header {
    display: none; /* Hide close button on desktop */
    justify-content: flex-end;
    padding: 20px;
    border-bottom: none;
  }

  .sidebar-close {
    background: none;
    border: none;
    color: var(--color-foreground);
    font-size: 24px;
    cursor: pointer;
    padding: 5px;
    line-height: 1;
  }

  .sidebar-close:hover {
    color: var(--color-foreground);
  }

  .sidebar-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    padding: 0;
  }

  .sidebar-menu-section {
    flex: 1;
    padding: 20px 0;
  }

  .sidebar-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .sidebar-menu-item {
    border-bottom: none;
  }

  .sidebar-menu-link {
    display: block;
    padding: 20px;
    color: var(--color-foreground);
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .sidebar-menu-link:hover { background-color: transparent; color: var(--color-accent); }

  .sidebar-footer {
    margin-top: auto;
    padding: 30px 20px;
    border-top: none;
    background-color: var(--color-background);
  }

  .sidebar-account {
    display: block;
    padding: 15px 0;
    color: var(--color-foreground);
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 500;
    transition: color 0.3s ease;
    font-size: 12px;
    border-bottom: none;
    margin-bottom: 20px;
  }

  .sidebar-account:hover { color: var(--color-accent); }

  .sidebar-links {
    margin-top: 25px;
    margin-bottom: 25px;
  }

  .sidebar-footer-link {
    display: block;
    padding: 10px 0;
    color: var(--color-foreground);
    text-decoration: none;
    font-size: 12px;
    text-transform: uppercase;
    letter-spacing: 1px;
    transition: color 0.3s ease;
  }

  .sidebar-footer-link:hover { color: var(--color-accent); }

  .sidebar-social {
    display: flex;
    gap: 20px;
    justify-content: left;
    margin-bottom: 20px;
  }

  .social-link {
    color: var(--color-foreground);
    transition: color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .social-link:hover { color: var(--color-accent); }

  .social-link svg {
    width: 24px;
    height: 24px;
  }

  /* Tablet & Mobile adjustments */
  @media (max-width: 770px) {
    .sidebar-header {
      display: flex; /* Show close button on mobile */
    }
    
    .sidebar {
      width: 100%;
      left: -100%;
    }
    
    .sidebar.open {
      height: 100%;
      left: 0;
    }

      .sidebar-content {
        height: 80%;
    }
  }

    @media (max-width: 350px) {
    .sidebar-content {
        height: 80%;
    }
  }
  /* Desktop: never show overlay */
  @media (min-width: 771px) {
    .sidebar-overlay { display: none; }
  }
{% endstylesheet %}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const sidebar = document.getElementById('sidebar');
    const sidebarToggles = document.querySelectorAll('.sidebar-toggle--in-header');
    const sidebarClose = document.getElementById('sidebar-close');
    const sidebarOverlay = document.getElementById('sidebar-overlay');

    const setExpanded = (expanded) => {
      for (const btn of sidebarToggles) {
        btn.setAttribute('aria-expanded', expanded ? 'true' : 'false');
        btn.classList.toggle('is-active', !!expanded);
      }
    };

    function openSidebar() {
      if (!sidebar) return;
      sidebar.classList.add('open');
      sidebarOverlay?.classList.add('active');
      document.body.style.overflow = 'hidden';
      setExpanded(true);
    }

    function closeSidebar() {
      if (!sidebar) return;
      sidebar.classList.remove('open');
      sidebarOverlay?.classList.remove('active');
      document.body.style.overflow = '';
      setExpanded(false);
    }

    // Initialize ARIA attributes and bind toggles
    if (sidebarToggles && sidebarToggles.length) {
      for (const btn of sidebarToggles) {
        btn.setAttribute('aria-controls', 'sidebar');
        btn.setAttribute('aria-expanded', 'false');
        btn.addEventListener('click', () => {
          if (sidebar?.classList.contains('open')) closeSidebar();
          else openSidebar();
        });
      }
    }

    if (sidebarClose) sidebarClose.addEventListener('click', closeSidebar);
    if (sidebarOverlay) sidebarOverlay.addEventListener('click', closeSidebar);

    // Close sidebar on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && sidebar && sidebar.classList.contains('open')) {
        closeSidebar();
      }
    });

    // Auto-close overlay when resizing to desktop (burger disappears)
    const mqMobile = window.matchMedia('(max-width: 770px)');
    const onViewportChange = (e) => {
      if (!e.matches) {
        // Now desktop: ensure sidebar state is closed and overlay hidden
        closeSidebar();
      }
    };
    // Bind listener with cross-browser support
    if (typeof mqMobile.addEventListener === 'function') {
      mqMobile.addEventListener('change', onViewportChange);
    } else if (typeof mqMobile.addListener === 'function') {
      mqMobile.addListener(onViewportChange);
    }
    // Initial guard on load
    if (!mqMobile.matches) {
      closeSidebar();
    }
  });
{% endjavascript %}

{% schema %}
{
  "name": "Sidebar Navigation",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "label": "Navigation Menu",
      "default": "main-menu"
    }
  ]
}
{% endschema %}
